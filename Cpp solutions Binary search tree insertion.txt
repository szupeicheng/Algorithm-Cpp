class Node {
    public:
        int data;
        Node *left;
        Node *right;
        Node(int d) {
            data = d;
            left = NULL;
            right = NULL;
        }
};


    Node * insert(Node * root, int data) {


        return root;
    }


//Node n = Node(data);
if ( root ==NULL ) { return getNode(data); }
Node *ptr = root;
Node *parent = NULL;
while (1) { //(ptr != NULL) { 
    parent = ptr; 
    //cout << ptr->data << ' ';
    if(data < ptr->data) { ptr=ptr->left; if (ptr == NULL){parent->left=getNode(data);} }
    else {ptr=ptr->right; if (ptr ==NULL) {parent->right=getNode(data);} }
    return root;
}


Node n = Node(data);
if ( root ==NULL ) { root = &n ; return root; }
Node *ptr = root;
Node *parent = NULL;
while (ptr!=NULL) { //(ptr != NULL) { 
    parent = ptr; 
    cout << ptr->data << ' ';
    if(data < ptr->data) { ptr=ptr->left; if (ptr == NULL){parent->left=&n;} }
    else {ptr=ptr->right; if (ptr ==NULL) {parent->right=&n;} }
    //return root;
}
return root;
    }





Node *getNode(int item) {
  Node *temp = new Node(item) ;
  temp->data = item;
  temp->left = temp->right = NULL;
  return temp;
  
}


    Node * insert(Node * root, int data) {
//Node n = Node(data);
//Node *p ;
if (root == NULL) { return getNode(data); }

if (data < root->data) root->left = insert(root->left, data);
else { root->right = insert(root->right, data); }
return root;

    }


    Node * insert(Node * root, int data) {
if ( root ==NULL ) { return getNode(data); }
Node *ptr = root;
Node *parent = NULL;
while (ptr != NULL) { 
    parent = ptr; 
    //cout << ptr->data << ' ';
    if(data < ptr->data) { ptr=ptr->left; if (ptr == NULL){parent->left=getNode(data);} }
    else {ptr=ptr->right; if (ptr ==NULL) {parent->right=getNode(data);} }
    
}
    return root;
    }
