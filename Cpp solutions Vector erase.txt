#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


void vecErase(vector<int> vec, int x, int a, int b){
	//Write your code here.
vector<int>::iterator it = vec.begin();
vec.erase(it+x-1);
vec.erase(it+a-1, it+b);
for ( ; it != vec.end() ; ++it) cout << vec.at(i) << ' ';

}

int main(){
  
	int t;
	cin >> t;
        vector<int> vec;
    	int i;

	while(t>0) {
           cin >> i ;
           vec.push_back(i);
    	t--;
  	}
        int x, a, b;
        cin >> x ;
        cin >> a >> b ;
        vecErase(vec, x, a, b);
  	return 0;
}

int main(){
  
	int t;
	cin >> t;
	while(t>0) {
		//int n,k;
    	//cin >> n >> k;
    	int i;
    	int arr[n];
    	for(i=0;i<n;i++)
      		cin >> arr[i];
    	vectorErase(arr);
    	t--;
  	}
  	return 0;
}


//right answer

#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

void vecErase(vector<int> vec, int x, int a, int b){
    //Write your code here.
    vector<int>::iterator it = vec.begin();
    vec.erase(it+x-1);
    vec.erase(it+a-1, it+b-1);
    cout << vec.size() << endl;
    for ( ; it != vec.end() ; ++it) cout << *it << ' ';

}

int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ 
    int t;
    cin >> t;
    vector<int> vec;
    int i;

    while(t>0) {
        cin >> i ;
        vec.push_back(i);
        t--;
      }
    int x, a, b;
    cin >> x ;
    cin >> a >> b ;
    vecErase(vec, x, a, b);
  
    return 0;
}