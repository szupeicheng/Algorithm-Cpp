
SinglyLinkedListNode* rhead1= new SinglyLinkedListNode(head1->data);
rhead1->next = NULL;
SinglyLinkedListNode* rhead2= new SinglyLinkedListNode(head2->data);
rhead2->next = NULL;

SinglyLinkedListNode* p1=head1->next;
while (p1 != NULL) {
    SinglyLinkedListNode* temp = new SinglyLinkedListNode(p1->data);
    temp->next = rhead1;
    rhead1 = temp;
    p1 = p1->next;
}

SinglyLinkedListNode* p2=head2->next;
while (p2 != NULL) {
    SinglyLinkedListNode* temp = new SinglyLinkedListNode(p2->data);
    temp->next = rhead2;
    rhead2 = temp;
    p2 = p2->next;
}

SinglyLinkedListNode* ptr1=rhead1;
SinglyLinkedListNode* ptr2=rhead2;

std::vector<int> myVector;
while ( ptr1->data == ptr2->data ) {
    myVector.push_back(ptr1->data);
    cout << myVector.back(); 
if (ptr1->next !=NULL) {ptr1= ptr1->next; } 
if (ptr2->next != NULL) {ptr2 = ptr2->next;}
if (ptr1->next == NULL) break;
if (ptr2->next == NULL) break;
}

int r = myVector.back();
return r; //myVector.back(); //t1->data;